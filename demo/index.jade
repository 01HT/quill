doctype 5
html
  head
    title Stypi Editor Demo
    link(rel='stylesheet', type='text/css', href='styles/reset.css')
    link(rel='stylesheet', type='text/css', href='styles/style.css')
    meta(charset='utf-8')

  body
    #content-container
      .editor-wrapper
        #formatting-container.formatting-container
          select.font-name
            option(value='sans-serif', selected=true)  Sans Serif
            option(value='serif')      Serif
            option(value='monospace')  Monospace
          select.font-size
            option(value='small')   Small
            option(value='normal', selected=true) Normal
            option(value='large')   Large
            option(value='huge')    Huge
          select.fore-color
            option(value='white')   White
            option(value='black', selected=true)  Black
            option(value='red')     Red
            option(value='blue')    Blue
            option(value='lime')    Lime
            option(value='teal')    Teal
            option(value='magenta') Magenta
            option(value='yellow')  Yellow
          select.back-color
            option(value='white', selected=true)   White
            option(value='black')   Black
            option(value='red')     Red
            option(value='blue')    Blue
            option(value='lime')    Lime
            option(value='teal')    Teal
            option(value='magenta') Magenta
            option(value='yellow')  Yellow
          button.format-button.bold Bold
          button.format-button.italic Italic
          button.format-button.underline Under
          button.format-button.strike Strike
          button.format-button.link Link
        #editor-container.editor-container
          include content

    script(type='text/javascript', src='../scribe.all.js')
    script(type='text/javascript').
      var editor = new Scribe.Editor('editor-container');
      var toolbar = new Scribe.Toolbar('formatting-container', editor);
      if (typeof console != 'undefined') {
        editor.on(Scribe.Editor.events.USER_TEXT_CHANGE, function(delta) {
          console.info('Text', delta);
        }).on(Scribe.Editor.events.SELECTION_CHANGE, function(range) {
          if (range) {
            console.info('Range', range.start.index, range.start.leafNode, range.start.offset, range.end.index, range.end.leafNode, range.end.offset);
          } else {
            console.info('Range', range);
          }
        }).on(Scribe.Editor.events.FOCUS_CHANGE, function(focus) {
          console.log('Focus', focus);
        });
      }
