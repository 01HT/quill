Selections
===

Browser implement selections differently. We use rangy to bridge some gaps but account for others here (perhaps outside of Rangy's scope).


Quirks
---
startContainer > endContainer

Browsers define a startContainer, startOffset, endContainer, and endOffset. Technically the start is where the user started dragging, so it's not always before end. We never have logic depending on where the user starts/stops dragging so our startContainer is always before the endContainer in the DOM.

Location ambiguity: <div><span>abc</span><span>def</span><div>

If the cursor is after the c, there are multiple ways to express its location. It can be 
1. startContainer <div>, startOffset 1
2. startContainer <span>abc</span>, startOffset 3
3. startContainer <span>def</span>, startOffset 0

We standardize to always take the most specific definition, advancing to the next sibling whenever possible. In this case we prefer #3.

Location ambiguity (Firefox): <div><br></div>

We make an exception to the above rule for Firefox since if the selection is inside a BR tag and the user hits enter, Firefox will fail to create a newline. Thus we set the selection to the parent node and offset appropriately

Newline generation (Firefox)

When a newline is created from a user ENTER on an empty line, we have the following: <div><br><br></div>
From our above rule we express this selection as startContainer: <div>, startOffset: 1 (0 would be the first br)
When splitting this line, we can either add the new div before or after our current line. Firefox would prefer we add it before since if we add it after we have:
<div><br></div>
<div><br></div>
But our selection points to the first div. Thus we must prepend for correct behavior of advancing our cursor to the next line.

